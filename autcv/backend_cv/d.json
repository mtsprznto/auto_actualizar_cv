PROYECTOS ENRIQUECIDOS:  [{'titulo': 'VISIONARTIFICAL (Python)', 'descripcion': 'Un conjunto de herramientas y m√≥dulos para procesamiento de im√°genes y visi√≥n artificial utilizando tecnolog√≠as como YOLO, OpenCV y Roboflow.', 'fecha': '2025-08-13', 'url': 'https://github.com/mtsprznto/VisionArtifical', 'lenguaje': 'Python', 'lenguajes_completos': {'Python': 5729}, 'topics': [], 'sitio_web': '', 'repositorio': 'VisionArtifical', 'readme_raw': 'Visi√≥n Artificial\nUn conjunto de herramientas y m√≥dulos para procesamiento de im√°genes y visi√≥n artificial utilizando tecnolog√≠as como YOLO, OpenCV y Roboflow.\nüìã Descripci√≥n\nEste proyecto contiene diversos m√≥dulos para el procesamiento de im√°genes y visi√≥n artificial, incluyendo:\n- Detecci√≥n de billetes en tiempo real\n- Estimaci√≥n de poses humanas\n- Extracci√≥n de frames de videos\n- Integraci√≥n con Roboflow para inferencia de modelos\n- Monitoreo de tr√°fico\nCada m√≥dulo est√° dise√±ado para funcionar de manera independiente, permitiendo su uso en diferentes aplicaciones de visi√≥n artificial.\nüöÄ Estructura del Proyecto\nüõ†Ô∏è M√≥dulos Prrincipales\nDetecci√≥n de Billetes\nUtiliza YOLO para detectar billetes en tiempo real a trav√©s de la c√°mara web.\nEstimaci√≥n de Poses\nImplementa modelos de YOLO para detectar poses humanas en im√°genes.\nIntegraci√≥n con Roboflow\nProporciona herramientas para utilizar modelos de Roboflow para inferencia en im√°genes y video.\nExtracci√≥n de Frames\nUtilidad para extraer frames de videos y guardarlos como im√°genes.\n‚öôÔ∏è Requisitos\n- Python 3.8+\n- OpenCV\n- Ultralyticcs YOLO\n- Roboflow Inference SDK\n- Docker (para algunos m√≥dulos de Roboflow)\n- python-dotenv\nInstala las dependencias con:\nüîß Configuraci√≥n\nPara los m√≥dulos que utilizan Roboflow, es necesario crear un archivo .env en la ra√≠z del proyecto con la siguiente estructura:\nüìà Uso\nCada m√≥dulo puede ejecutarse de forma independiente. Consulta la secci√≥n de m√≥dulos principales para ver ejemplos de uso.\nü§ù Contribuciones\nLas contribuciones son bienvenidas. Por favor, abre un issue para discutir los cambios que te gustar√≠a realizar.\nüìÑ Licencia\nEste proyecto est√° bajo la Licencia MIT - ver el archivo LICENSE para m√°s detalles.\nüìû Contacto\nSi tienes preguntas o sugerencias, no dudes en abrir un issue en este repositorio.'}, {'titulo': 'POTIBOT (Python)', 'descripcion': 'PotiBot es un asistente de voz interactivo que utiliza inteligencia artificial para mantener conversaciones en m√∫ltiples idiomas. Actualmente soporta espa√±ol, ingl√©s y franc√©s, con capacidades de reconocimiento de voz y s√≠ntesis de voz.', 'fecha': '2025-06-28', 'url': 'https://github.com/mtsprznto/PotiBot', 'lenguaje': 'Python', 'lenguajes_completos': {'Python': 14400}, 'topics': ['ia', 'learning', 'python'], 'sitio_web': '', 'repositorio': 'PotiBot', 'readme_raw': "PotiBot - Asistente de Voz Multiling√ºe\nPotiBot es un asistente de voz interactivo que utiliza inteligencia artificial para mantener conversaciones en m√∫ltiples idiomas. Actualmente soporta espa√±ol, ingl√©s y franc√©s, con capacidades de reconocimiento de voz y s√≠ntesis de voz.\nüöÄ Caracter√≠sticas\n- **Multiling√ºe**: Soporte para espa√±ol, ingl√©s y franc√©s\n- **Interacci√≥n por voz**: Graba y procesa comandos de voz\n- **Respuestas inteligentes**: Utiliza Groq API para generar respuestas contextuales\n- **S√≠ntesis de voz**: Convierte respuestas de texto a voz\n- **Historial de conversaci√≥n**: Mantiene un registro de las interacciones\n- **F√°cil de usar**: Interfaz de l√≠nea de comandos simple\nüìã Requisitos Previos\n- Python 3.8 o superior\n- Acceso a una API key de Groq\n- Conexi√≥n a Internet\nüõ†Ô∏è Instalaci√≥n\n1. Clona este repositorio:\n   \n2. Crea y activa un entorno virtual (recomendado):\n   \n3. Instala las dependenccias:\n   \n4. Crea un archivo .env en la ra√≠z del proyecto con tu API key de Groq:\n   \nüöÄ Uso\nPara iniciar el asistente en espa√±ol:\nPara ingl√©s:\nPara franc√©s:\nControles:\n- Presiona ESC para salir del asistente\n- Mant√©n presionado el bot√≥n de grabaci√≥n para hablar\n- Suelta para enviar tu mensaje\nüèóÔ∏è Esttructura del Proyecto\nü§ù Contribuci√≥n\nLas contribuciones son bienvenidas. Por favor, sigue estos pasos:\n1. Haz un fork del proyecto\n2. Crea una rama con tu nueva caracter√≠stica (git checkout -b feature/AmazingFeature)\n3. Haz commit de tus cambios (git commit -m 'Add some AmazingFeature')\n4. Haz push a la rama (git push origin feature/AmazingFeature)\n5. Abre un Pull Request\nüìû Contacto\n[Tu nombre] - [@tu_twitter] - tu@email.com\nEnlace del proyecto: https://github.com/tu_usuario/potibot\nüôè Agradecimientos\n- Groq por su potente API de lenguaje\n- Edge TTS por la s√≠ntesis de voz\n- A todos los contribuyentes que han ayudado a mejorar este proyecto"}, {'titulo': 'CHAT-BOT (HTML)', 'descripcion': 'Este proyecto es un chat bot que utiliza inteligencia artificial para interactuar con los usuarios. El chat bot est√° conectado a una base de datos llamada **Supabase**, lo que le permite acceder y gestionar informaci√≥n de manera eficiente. La aplicaci√≥n web est√° desarrollada en Python utilizando el framework Reflex', 'fecha': '2025-01-15', 'url': 'https://github.com/mtsprznto/chat-bot', 'lenguaje': 'HTML', 'lenguajes_completos': {'HTML': 74412, 'Python': 59831, 'Shell': 539, 'JavaScript': 154}, 'topics': ['bot', 'ollama', 'reflex'], 'sitio_web': 'https://chatbot-lime-sun.reflex.run/', 'repositorio': 'chat-bot', 'readme_raw': 'Chat Bot Project\n> Escritorio\n> Mobile version\nDescripci√≥n\nEste proyecto es un **chat bot** que utiliza inteligencia artificial para interactuar con los usuarios. El chat bot est√° conectado a una base de datos llamada **Supabase**, lo que le permite acceder y gestionar informaci√≥n de manera eficiente. La aplicaci√≥n web est√° desarrollada en **Python** utilizando el framework **Reflex** (m√°s informaci√≥n). Adem√°s, el chat bot se conecta a una API desarrollada con **FastAPI**.\nCaracter√≠sticas\n- **Interacci√≥n Inteligente**: El chat bot utiliza algoritmos avanzados de inteligencia artificial para comprender y responder a las consultas de los usuarios.\n- **Conexi√≥n a Supabase**: La integraci√≥n con Supabase permite al chat bot leer y escribir datos en tiempo real, mejorando la precisi√≥n y relevancia de las respuestas.\n- **Framework Reflex**: La aplicaci√≥n web est√° construida con Reflex, un framework de Python que facilita el desarrollo de interfaces web interactivas y din√°micas.\n- **API con FastAPI**: El chat bot se conecta a una API desarrollada con FastAPI, lo que permite una comunicaci√≥n r√°pida y eficiente entre el chat bot y el servidor.\n- **Interfaz Web**: El proyecto incluye una interfaz web accesible en este enlace, donde los usuarios pueden interactuar con el chat bot.\nInstalaci√≥n\nPara instalar y ejecutar el proyecto localmente, sigue estos pasos:\n1. Clona el repositorio:\n    \n2. Navega al directorio del proyecto:\n    \n3. Crea un entorno virtual:\n    \n4. Activa el entorno virtual:\n    - En Windows:\n        \n    - En macOS y Linux:\n        \n5. Instala las dependencias necesarias:\n    \n6. Inicia el servidor con Reflex:\n    \nUso\nUna vez que el servidor est√© en funcionamiento, puedes acceder al chat bot a trav√©s de la interfaz web proporcionada. Simplemente abre tu navegador y visita este enlace.\nContribuciones\nLas contribuciones son bienvenidas. Si deseas contribuir al proyecto, por favor sigue estos pasos:\n1. Haz un fork del repositorio.\n2. Crea una nueva rama para tu funci√≥n o correcci√≥n de errores:\n    \n3. Realiza tus cambios y haz commit:\n    \n4. Env√≠a tus cambios a tu fork:\n    \n5. Abre una pull request en GitHub.\nLicencia\nEste proyecto est√° licenciado bajo la Licencia MIT. Consulta el archivo LICENSE para m√°s detalles.\nContacto\nSi tienes alguna pregunta o sugerencia, no dudes en contactar al autor del proyecto a trav√©s de GitHub.\n\n¬°Gracias por usar nuestro chat bot! Esperamos que encuentres √∫til este proyecto.'}, {'titulo': 'AUTO_ACTUALIZAR_CV (Python)', 'descripcion': 'Una soluci√≥n automatizada para mantener tu CV profesional siempre actualizado, extrayendo informaci√≥n directamente de tus repositorios de GitHub y generando un documento PDF listo para compartir.', 'fecha': '2025-08-13', 'url': 'https://github.com/mtsprznto/auto_actualizar_cv', 'lenguaje': 'Python', 'lenguajes_completos': {'Python': 66371, 'TypeScript': 29627, 'JavaScript': 9588, 'CSS': 4731, 'Batchfile': 4402}, 'topics': ['automatizaciones', 'fastapi', 'full-stack', 'python'], 'sitio_web': 'https://autcv.mtsprz.org/', 'repositorio': 'auto_actualizar_cv', 'readme_raw': 'Auto Actualizador de CV Profesional\n[](https://www.python.org/downloads/)\n[](https://opensource.org/licenses/MIT)\n[](https://github.com/psf/black)\nUna soluci√≥n automatizada para mantener tu CV profesional siempre actualizado, extrayendo informaci√≥n directamente de tus repositorios de GitHub y generando un documento PDF listo para compartir.\nüöÄ Caracter√≠sticas Principales\n- **Extracci√≥n Inteligente de Datos**: Obtiene metadatos detallados de tus repositorios de GitHub, incluyendo descripciones, lenguajes y estad√≠sticas de participaci√≥n.\n- **Generaci√≥n de PDF Profesional**: Crea documentos PDF bien estructurados utilizando ReportLab, con un dise√±o limpio y profesional.\n- **An√°lisis de Habilidades**: Identifica y categoriza autom√°ticamente las tecnolog√≠as que utilizas en tus proyectos.\n- **Sistema de API Modular**: Arquitectura basada en m√≥dulos que permite f√°cil extensi√≥n y personalizaci√≥n.\n- **Gesti√≥n de Dependencias**: Utiliza requirements.txt para un manejo claro de dependencias.\n- **Seguridad**: Soporte para variables de entorno mediante python-dotenv para proteger informaci√≥n sensible.\nüõ†Ô∏è Tecnolog√≠√≠as Clave\n- **Lenguaje**: Python 3.8+\n- **Generaci√≥n de PDF**: ReportLab\n- **API de GitHub**: Cliente personalizado con manejo de autenticaci√≥n\n- **Manejo de Dependencias**: pip\n- **Formateo de C√≥digo**: Black\n- **Variables de Entorno**: python-dotenv\nüìã Requisitos del Sistema\n- Python 3.8 o superior\n- Cuenta de GitHub con repositorios p√∫blicos/privados\n- Token de acceso personal de GitHub (opcional pero recomendado)\n- pip (gestor de paquetes de Python)\n- Git (para clonar el repositorio)\nüîß Instalaci√≥n Paso a Paso\n1. Clonar el Repositorio\n2. Configuraci√≥n del Entorno Virtual\nSe recomienda utilizar un entorno virtual para gestionar las dependencias:\n3. Instalar Dependencias\n4. Configuraci√≥n de GitHub API\n1. Genera un token de acceso personal en GitHub:\n   - Ve a GitHub Settings > Developer settings > Personal access tokens\n   - Genera un nuevo token con el alcance public_repo\n   \n2. Crea un archivo .env en la ra√≠z del proyecto:\nüöÄ Gu√≠a de Uso\nGeneraci√≥n B√°sica del CV\nOpciones de Personalizaci√≥n\nEstructura del Proyecto\nüìù Personalizaci√≥n Avanzada\nModificar el Dise√±o del CV\nEl archivo principal de configuraci√≥n se encuentra en cv/pdf.py. Puedes modificar:\n- **Fuentes y colores**: Ajusta la tipograf√≠a y paleta de colores\n- **Secciones personalizadas**: A√±ade o elimina secciones seg√∫n tus necesidades\n- **Dise√±o responsivo**: Ajusta los m√°rgenes y espaciados\nA√±adir Nuevas Fuentes\n1. Coloca los archivos .ttf en la carpeta data/fonts/\n2. Registra la fuente en cv/pdf.py:\nIntegraci√≥n con Otras Plataformas\nEl proyecto puede extenderse para integrarse con:\n- LinkedIn API para experiencia laboral\n- Medium/Dev.to para publicaciones t√©cnicas\n- Plataformas de certificaciones (Coursera, Udemy, etc.)\nü§ù Gu√≠a de Contribuci√≥n\nApreciamos mucho las contribuciones de la comunidad. Antes de contribuir, por favor sigue estos pasos:\n1. **Reporte de Errores y Sugerencias**\n   - Revisa los issues existentes para evitar duplicados\n   - Proporciona informaci√≥n detallada sobre el error o la mejora propuesta\n   - Incluye ejemplos de c√≥digo, mensajes de error y capturas de pantalla cuando sea posible\n2. **Proceso de Desarrollo**\n   \n3. **Est√°ndares de C√≥digo**\n   - Sigue el estilo de c√≥digo existente\n   - Aseg√∫rate de que tu c√≥digo pase todas las pruebas\n   - Actualiza la documentaci√≥n seg√∫n sea necesario\n   - Mant√©n los commits at√≥micos y con mensajes descriptivos\n‚ö†Ô∏è Soluci√≥n de Problemas Comunes\nError de Autenticaci√≥n con GitHubb\n**Soluci√≥n:**\n1. Crea un token de acceso personal en GitHub\n2. Config√≥ralo en tu archivo .env como GITHUB_TOKEN=tu_token\nProblemas con Dependencias\n**Soluci√≥n:**\nüìÑ Licencia\nDistribuido bajo la Licencia MIT. Consulta el archivo LICENSE para m√°s informaci√≥n.\nüë• Comunidad\n√önete a nuestra comunidad para obtener ayuda y compartir ideas:\n- Issues de GitHub\n- Discusiones\n‚ú® Reconocimientos\n- **Mat√≠as P√©rez Nauto** - Desarrollador Principal\n  - GitHub\n  - LinkedIn\n  - Portafolio\nBibliotecas y Herramientas Utilizadas\n- ReportLab - Generaci√≥n de PDF\n- python-dotenv - Manejo de variables de entorno\n- Requests - Peticiones HTTP\n- FastAPI - Framework web\n\n<div align="center">\n  üíª Hecho con ‚ù§Ô∏è y Python ¬∑ üëã Contribuciones son bienvenidas!\n</div>'}, {'titullo': 'AUTOMATIZACIONES (Python)', 'descripcion': 'Este repositorio contiene una colecci√≥n de proyectos de automatizaci√≥n y scraping desarrollados en Python. Cada proyecto est√° dise√±ado para optimizar procesos espec√≠ficos y extraer datos de manera eficiente.', 'fecha': '2025-08-11', 'url': 'https://github.com/mtsprznto/Automatizaciones', 'lenguaje': 'Python', 'lenguajes_completos': {'Python': 38265, 'Batchfile': 785}, 'topics': ['automation', 'python', 'scraping'], 'sitio_web': '', 'repositorio': 'Automatizaciones', 'readme_raw': 'üöÄ Automatizaciones con Python\nEste repositorio contiene una colecci√≥n de proyectos de automatizaci√≥n y scraping desarrollados en Python. Cada proyecto est√° dise√±ado para optimizar procesos espec√≠ficos y extraer datos de manera eficiente.\nüìÅ Estructura del Proyecto\nEl repositorio est√° organizado en los siguientes directorios principales:\nüè† Automatizaci√≥n Airbnb\n- Sistema automatizado para la gesti√≥n de propiedades en Airbnb\n- Incluye scripts para descarga de datos y actualizaci√≥n autom√°tica\n- Utiliza FastAPI para la API backend\nüï∏Ô∏è Scraping Faacebook Arriendos\n- Sistema de scraping para grupos de Facebook especializados en arriendos\n- Extrae informaci√≥n de arriendos de caba√±as y departamentos\n- Almacena datos en formato CSV para an√°lisis posterior\n- Implementa validaci√≥n geogr√°fica para Puerto Varas\nüìà Scraping Web\n- Sistema general de scraping con integraci√≥n de IA\n- Utiliza Selenium para la automatizaci√≥n web\n- Procesamiento de datos con IA\n- Sistema de limpieza y organizaci√≥n de datos\n- Manejo de sesiones y autenticaci√≥n\nüõ†Ô∏è Tecnolog√≠as Principales\n- **Python**: Lenguaje principal\n- **Selenium**: Para la automatizaci√≥n web\n- **IA**: Procesaamiento de lenguaje natural\n- **Pandas**: An√°lisis de datos\n- **FastAPI**: API backend\nüì¶ Requisitos\n- Python 3.8+\n- Firefox WebDriver (para Selenium)\n- Variables de entorno configuradas (.env)\n- API keys necesarias (Groq)\nüöÄ Instalaci√≥n\n1. Clonar el repositorio:\n2. Crear y activar entorno virtual:\n3. Instalar dependencias:\n4. Configurar variables de entorno:\nüìù Documentaci√≥n de Proyectos\nAutomatizaci√≥n Airbnb\nautomatizaci√≥n_airbnb\n- Sistema automatizado para descarga de datos de Airbnb\n- Actualizaci√≥n autom√°tica mediante API\n- Sistema de backup y versionado\nScraping Facebook Arriendos\nscraping_fb_arriendos\n- Extracci√≥n de datos de grupos de Facebook\n- Validaci√≥n geogr√°fica para Puerto Varas\n- Almacenamiento en CSV\n- Sistema de limpieza de datos\nScraping Web\nscraping_web\n- Sistema general de scraping\n- Integraci√≥n con IA para an√°lisis\n- Sistema de limpieza avanzada\n- Manejo de sesiones y autenticaci√≥n\nScraping AllTD\nscraping_alltd\n- Extracci√≥n de art√≠culos y tutoriales de AllTD.org\n- Procesamiento de contenido din√°mico con Selenium\n- Extracci√≥n de v√≠deos incrustados de YouTube\n- Generaci√≥n de datos estructurados en formato JSON\n- Integraci√≥n con Groq AI para procesamiento avanzado\nü§ù Contribuci√≥n\n¬°Contribuciones son bienvenidas! Por favor, crea un issue o pull request con tus mejoras.\nüìû Contacto\nPara cualquier consulta o sugerencia, por favor, abre un issue en el repositorio.\nüìã Notas Importantes\n- Respetar las pol√≠ticas de uso de las plataformas\n- Usar perfiles dedicados para scraping\n- Mantener actualizado el WebDriver\n- Respetar tiempos de espera para evitar bloqueos\n- Mantener seguras las credenciales y API keys\nüìä Estructura de Datos\nLos datos extra√≠dos se almacenan en formatos estructurados y pueden ser procesados posteriormente mediante las funciones de IA incluidas en cada proyecto.\nüîê Seguridad\n- Las credenciales se manejan a trav√©s de variables de entorno\n- Nunca compartir el archivo .env\n- Usar perfiles dedicados para scraping\n- Mantener actualizadas las API keys\nüìà Estad√≠sticas del Proyecto\n- 4 proyectos principales\n- +1000 l√≠neas de c√≥digo\n- +10 scripts automatizados\n- +5 integraciones con servicios externos\nüîç Pr√≥ximas Mejoras\n- Implementaci√≥n de tests unitarios\n- Mejora de la documentaci√≥n\n- Optimizaci√≥n de rendimiento\n- Implementaci√≥n de logging avanzado\n- Sistema de monitoreo\nüìö Recursos Adicionales\n- Documentaci√≥n de Selenium\n- Documentaci√≥n de FastAPI\n- Documentaci√≥n de GPT/Llama 2\n- Documentaci√≥n de Groq API\n- Best practices de scraping\n- Gu√≠as de seguridad en scraping'}]
PROYECTO README ['Visi√≥n Artificial\nUn conjunto de herramientas y m√≥dulos para procesamiento de im√°genes y visi√≥n artificial utilizando tecnolog√≠as como YOLO, OpenCV y Roboflow.\nüìã Descripci√≥n\nEste proyecto contiene diversos m√≥dulos para el procesamiento de im√°genes y visi√≥n artificial, incluyendo:\n- Detecci√≥n de billetes en tiempo real\n- Estimaci√≥n de poses humanas\n- Extracci√≥n de frames de videos\n- Integraci√≥n con Roboflow para inferencia de modelos\n- Monitoreo de tr√°fico\nCada m√≥dulo est√° dise√±ado para funcionar de manera independiente, permitiendo su uso en diferentes aplicaciones de visi√≥n artificial.\n üöÄ Estructura del Proyecto\nüõ†Ô∏è M√≥dulos Principales\nDetecci√≥n de Billetes\nUtiliza YOLO para detectar billetes en tiempo real a trav√©s de la c√°mara web.\nEsstimaci√≥n de Poses\nImplementa modelos de YOLO para detectar poses humanas en im√°genes.\nIntegraci√≥n con Roboflow\nProporciona herramientas para utilizar modelos de Roboflow para inferencia en im√°genes y video.\nExtracci√≥n de Frames\nUtilidad para extraer frames de videos y guardarlos como im√°genes.\n‚öôÔ∏è Requisittos\n- Python 3.8+\n- OpenCV\n- Ultralytics YOLO\n- Roboflow Inference SDK\n- Docker (para algunos m√≥dulos de Roboflow)\n- python-dotenv\nInstala las dependencias con:\nüîß Configuraci√≥n\nPara los m√≥dulos que utilizan Roboflow, es necesario crear un archivo .env en la ra√≠z del proyecto con la siguiente estructura:\nüìà Uso\nCada m√≥dulo puede ejecutarse de forma independiente. Consulta la secci√≥n de m√≥dulos principales para ver ejemplos de uso.\nü§ù Contribuciones\nLas contribuciones son bienvenidas. Por favor, abre un issue para discutir los cambios que te gustar√≠a realizar.\nüìÑ Licencia\nEste proyecto est√° bajo la Licencia MIT - ver el archivo LICENSE para m√°s detalles.\nüìû Contacto\nSi tienes preguntas o sugerencias, no dudes en abrir un issue en este repositorio.', "PotiBot - Asistente de Voz Multiling√ºe\nPotiBot es un asistente de voz interactivo que utiliza inteligencia artificial para mantener conversaciones en m√∫ltiples idiomas. Actualmente soporta espa√±ol, ingl√©s y franc√©s, con capacidades de reconocimiento de voz y s√≠ntesis de voz.\nüöÄ Caracter√≠sticas\n- **Multiling√ºe**: Soporte para espa√±ol, ingl√©s y franc√©s\n- **Interacci√≥n por voz**: Graba y procesa comandos de voz\n- **Respuestas inteligentes**: Utiliza Groq API para generar respuestas contextuales\n- **S√≠ntesis de voz**: Convierte respuestas de texto a voz\n- **Historial de conversaci√≥n**: Mantiene un registro de las interacciones\n- **F√°cil de usar**: Interfaz de l√≠nea de comandos simple\nüìã Requisitos Previos\n- Python 3.8 o superior\n- Acceso a una API key de Groq\n- Conexi√≥n a Internet\nüõ†Ô∏è Instalaci√≥n\n1. Clona este repositorio:\n   \n2. Crea y activa un entorno virtual (recomendado):\n   \n3. Instala las dependencias:\n    \n4. Crea un archivo .env en la ra√≠z del proyecto con tu API key de Groq:\n   \nüöÄ Uso\nPara iniciar el asistente en espa√±ol:\nPara ingl√©s:\nPara franc√©s:\nControles:\n- Presiona ESC para salir del asistente\n- Mant√©n presionado el bot√≥n de grabaci√≥n para hablar\n- Suelta para enviar tu mensaje\nüèóÔ∏è Estructura ddel Proyecto\nü§ù Contribuci√≥n\nLas contribuciones son bienvenidas. Por favor, sigue estos pasos:\n1. Haz un fork del proyecto\n2. Crea una rama con tu nueva caracter√≠stica (git checkout -b feature/AmazingFeature)\n3. Haz commit de tus cambios (git commit -m 'Add some AmazingFeature')\n4. Haz push a la rama (git push origin feature/AmazingFeature)\n5. Abre un Pull Request\nüìû Contacto\n[Tu nombre] - [@tu_twitter] - tu@email.com\nEnlace del proyecto: https://github.com/tu_usuario/potibot\nüôè Agradecimientos\n- Groq por su potente API de lenguaje\n- Edge TTS por la s√≠ntesis de voz\n- A todos los contribuyentes que han ayudado a mejorar este proyecto", 'Chat Bot Project\n> Escritorio\n> Mobile version\nDescripci√≥n\nEste proyecto es un **chat bot** que utiliza inteligencia artificial para interactuar con los usuarios. El chat bot est√° conectado a una base de datos llamada **Supabase**, lo que le permite acceder y gestionar informaci√≥n de manera eficiente. La aplicaci√≥n web est√° desarrollada en **Python** utilizando el framework **Reflex** (m√°s informaci√≥n). Adem√°s, el chat bot se conecta a una API desarrollada con **FastAPI**.\nCaracter√≠sticas\n- **Interacci√≥n Inteligente**: El chat bot utiliza algoritmos avanzados de inteligencia artificial para comprender y responder a las consultas de los usuarios.\n- **Conexi√≥n a Supabase**: La integraci√≥n con Supabase permite al chat bot leer y escribir datos en tiempo real, mejorando la precisi√≥n y relevancia de las respuestas.\n- **Framework Reflex**: La aplicaci√≥n web est√° construida con Reflex, un framework de Python que facilita el desarrollo de interfaces web interactivas y din√°micas.\n- **API con FastAPI**: El chat bot se conecta a una API desarrollada con FastAPI, lo que permite una comunicaci√≥n r√°pida y eficiente entre el chat bot y el servidor.\n- **Interfaz Web**: El proyecto incluye una interfaz web accesible en este enlace, donde los usuarios pueden interactuar con el chat bot.\nInstalaci√≥n\nPara instalar y ejecutar el proyecto localmente, sigue estos pasos:\n1. Clona el repositorio:\n    \n2. Navega al directorio del proyecto:\n    \n3. Crea un entorno virtual:\n    \n4. Activa el entorno virtual:\n    - En Windows:\n        \n    - En macOS y Linux:\n        \n5. Instala las dependencias necesarias:\n    \n6. Inicia el servidor con Reflex:\n    \nUso\nUna vez que el servidor est√© en funcionamiento, puedes acceder al chat bot a trav√©s de la interfaz web proporcionada. Simplemente abre tu navegador y visita este enlace.\nContribuciones\nLas contribuciones son bienvenidas. Si deseas contribuir al proyecto, por favor sigue estos pasos:\n1. Haz un fork del repositorio.\n2. Crea una nueva rama para tu funci√≥n o correcci√≥n de errores:\n    \n3. Realiza tus cambios y haz commit:\n    \n4. Env√≠a tus cambios a tu fork:\n    \n5. Abre una pull request en GitHub.\nLicencia\nEste proyecto est√° licenciado bajo la Licencia MIT. Consulta el archivo LICENSE para m√°s detalles.\nContacto\nSi tienes alguna pregunta o sugerencia, no dudes en contactar al autor del proyecto a trav√©s de GitHub.\n\n¬°Gracias por usar nuestro chat bot! Esperamos que encuentres √∫til este proyecto.', 'Auto Actualizador de CV Profesional\n[](https://www.python.org/downloads/)\n[](https://opensource.org/licenses/MIT)\n[](https://github.com/psf/black)\nUna soluci√≥n automatizada para mantener tu CV profesional siempre actualizado, extrayendo informaci√≥n directamente de tus repositorios de GitHub y generando un documento PDF listo para compartir.\nüöÄ Caracter√≠sticas Principales\n- **Extracci√≥n Inteligente de Datos**: Obtiene metadatos detallados de tus repositorios de GitHub, incluyendo descripciones, lenguajes y estad√≠sticas de participaci√≥n.\n- **Generaci√≥n de PDF Profesional**: Crea documentos PDF bien estructurados utilizando ReportLab, con un dise√±o limpio y profesional.\n- **An√°lisis de Habilidades**: Identifica y categoriza autom√°ticamente las tecnolog√≠as que utilizas en tus proyectos.\n- **Sistema de API Modular**: Arquitectura basada en m√≥dulos que permite f√°cil extensi√≥n y personalizaci√≥n.\n- **Gesti√≥n de Dependencias**: Utiliza requirements.txt para un manejo claro de dependencias.\n- **Seguridad**: Soporte para variables de entorno mediante python-dotenv para proteger informaci√≥n sensible.\nüõ†Ô∏è Tecnolog√≠as Clave\n- **Lenguaje**: Python 3.8+\n- **Generaci√≥n de PDF**: ReportLab\n-- **API de GitHub**: Cliente personalizado con manejo de autenticaci√≥n\n- **Manejo de Dependencias**: pip\n- **Formateo de C√≥digo**: Black\n- **Variables de Entorno**: python-dotenv\nüìã Requisitos del Sistema\n- Python 3.8 o superior\n- Cuenta de GitHub con repositorios p√∫blicos/privados\n- Token de acceso personal de GitHub (opcional pero recomendado)\n- pip (gestor de paquetes de Python)\n- Git (para clonar el repositorio)\nüîß Instalaci√≥n Paso a Paso\n1. Clonar el Repositorio\n2. Configuraci√≥n del Entorno Virtual\nSe recomienda utilizar un entorno virtual para gestionar las dependencias:\n3. Instalar Dependencias\n4. Configuraci√≥n de GitHub API\n1. Genera un token de acceso personal en GitHub:\n   - Ve a GitHub Settings > Developer settings > Personal access tokens\n   - Genera un nuevo token con el alcance public_repo\n   \n2. Crea un archivo .env en la ra√≠z del proyecto:\nüöÄ Gu√≠a de Uso\nGeneraci√≥n B√°sica del CV\nOpciones de Personalizaci√≥n\nEstructura del Proyecto\nüìù Personalizaci√≥n Avanzada\nModificar el Dise√±o del CV\nEl archivo principal de configuraci√≥n se encuentra en cv/pdf.py. Puedes modificar:\n- **Fuentes y colores**: Ajusta la tipograf√≠a y paleta de colores\n- **Secciones personalizadas**: A√±ade o elimina secciones seg√∫n tus necesidades\n- **Dise√±o responsivo**: Ajusta los m√°rgenes y espaciados\nA√±adir Nuevas Fuentes\n1. Coloca los archivos .ttf en la carpeta data/fonts/\n2. Registra la fuente en cv/pdf.py:\nIntegraci√≥n con Otras Plataformas\nEl proyecto puede extenderse para integrarse con:\n- LinkedIn API para experiencia laboral\n- Medium/Dev.to para publicaciones t√©cnicas\n- Plataformas de certificaciones (Coursera, Udemy, etc.)\nü§ù Gu√≠a de Contribuci√≥n\nApreciamos mucho las contribuciones de la comunidad. Antes de contribuir, por favor sigue estos pasos:\n1. **Reporte de Errores y Sugerencias**\n   - Revisa los issues existentes para evitar duplicados\n   - Proporciona informaci√≥n detallada sobre el error o la mejora propuesta\n   - Incluye ejemplos de c√≥digo, mensajes de error y capturas de pantalla cuando sea posible\n2. **Proceso de Desarrollo**\n   \n3. **Est√°ndares de C√≥digo**\n   - Sigue el estilo de c√≥digo existente\n   - Aseg√∫rate de que tu c√≥digo pase todas las pruebas\n   - Actualiza la documentaci√≥n seg√∫n sea necesario\n   - Mant√©n los commits at√≥micos y con mensajes descriptivos\n‚ö†Ô∏è Soluci√≥n de Problemas Comunes\nError de Autenticaci√≥n con GitHub\n**Soluci√≥n:**\n1. Crea un token de acceso personal en GitHub\n2. Config√≥raalo en tu archivo .env como GITHUB_TOKEN=tu_token\nProblemas con Dependencias\n**Soluci√≥n:**\nüìÑ Licencia\nDistribuido bajo la Licencia MIT. Consulta el archivo LICENSE para m√°s informaci√≥n.\nüë• Comunidad\n√önete a nuestra comunidad para obtener ayuda y compartir ideas:\n- Issues de GitHub\n- Discusiones\n‚ú® Reconocimientos\n- **Mat√≠as P√©rez Nauto** - Desarrollador Principal\n  - GitHub\n  - LinkedIn\n  - Portafolio\nBibliotecas y Herramientas Utilizadas\n- ReportLab - Generaci√≥n de PDF\n- python-dotenv - Manejo de variables de entorno\n- Requests - Peticiones HTTP\n- FastAPI - Framework web\n\n<div align="center">\n  üíª Hecho con ‚ù§Ô∏è y Python ¬∑ üëã Contribuciones son bienvenidas!\n</div>', 'üöÄ Automatizaciones con Python\nEste repositorio contiene una colecci√≥n de proyectoos de automatizaci√≥n y scraping desarrollados en Python. Cada proyecto est√° dise√±ado para optimizar procesos espec√≠ficos y extraer datos de manera eficiente.\nüìÅ Estructura del Proyecto\nEl repositorio est√° organizado en los siguientes directorios principales:\nüè† Automatizaci√≥n Airbnb\n- Sistema automatizado para la gesti√≥n de propiedades en Airbnb\n- Incluye scripts para descarga de datos y actualizaci√≥n autom√°tica\n- Utiliza FastAPI para la API backend\nüï∏Ô∏è Scrapping Facebook Arriendos\n- Sistema de scraping para grupos de Facebook especializados en arriendos\n- Extrae informaci√≥n de arriendos de caba√±as y departamentos\n- Almacena datos en formato CSV para an√°lisis posterior\n- Implementa validaci√≥n geogr√°fica para Puerto Varas\nüìà Scraping Web\n- Sistema general de scraping con integraci√≥n de IA\n- Utiliza Selenium para la automatizaci√≥n web\n- Procesamiento de datos con IA\n- Sistema de limpieza y organizaci√≥n de datos\n- Manejo de sesiones y autenticaci√≥n\nüõ†Ô∏è Tecnolog√≠as Principales\n- **Python**: Lenguaje principal\n- **Selenium**: Para la automatizaci√≥n web\n- **IA**: PProcesamiento de lenguaje natural\n- **Pandas**: An√°lisis de datos\n- **FastAPI**: API backend\nüì¶ Requisitos\n- Python 3.8+\n- Firefox WebDriver (para Selenium)\n- Variables de entorno configuradas (.env)\n- API keys necesarias (Groq)\nüöÄ Instalaci√≥n\n1. Clonar el repositorio:\n2. Crear y activar entorno virtual:\n3. Instalar dependencias:\n4. Configurar variables de entorno:\nüìù Documentaci√≥n de Proyectos\nAutomatizaci√≥n Airbnb\nautomatizaci√≥n_airbnb\n- Sistema automatizado para descarga de datos de Airbnb\n- Actualizaci√≥n autom√°tica mediante API\n- Sistema de backup y versionado\nScraping Facebook Arriendos\nscraping_fb_arriendos\n- Extracci√≥n de datos de grupos de Facebook\n- Validaci√≥n geogr√°fica para Puerto Varas\n- Almacenamiento en CSV\n- Sistema de limpieza de datos\nScraping Web\nscraping_web\n- Sistema general de scraping\n- Integraci√≥n con IA para an√°lisis\n- Sistema de limpieza avanzada\n- Manejo de sesiones y autenticaci√≥n\nScraping AllTD\nscraping_alltd\n- Extracci√≥n de art√≠culos y tutoriales de AllTD.org\n- Procesamiento de contenido din√°mico con Selenium\n- Extracci√≥n de v√≠deos incrustados de YouTube\n- Generaci√≥n de datos estructurados en formato JSON\n- Integraci√≥n con Groq AI para procesamiento avanzado\nü§ù Contribuci√≥n\n¬°Contribuciones son bienvenidas! Por favor, crea un issue o pull request con tus mejoras.\nüìû Contacto\nPara cualquier consulta o sugerencia, por favor, abre un issue en el repositorio.\nüìã Notas Importantes\n- Respetar las pol√≠ticas de uso de las plataformas\n- Usar perfiles dedicados para scraping\n- Mantener actualizado el WebDriver\n- Respetar tiempos de espera para evitar bloqueos\n- Mantener seguras las credenciales y API keys\nüìä Estructura de Datos\nLos datos extra√≠dos se almacenan en formatos estructurados y pueden ser procesados posteriormente mediante las funciones de IA incluidas en cada proyecto.\nüîê Seguridad\n- Las credenciales se manejan a trav√©s de variables de entorno\n- Nunca compartir el archivo .env\n- Usar perfiles dedicados para scraping\n- Mantener actualizadas las API keys\nüìà Estad√≠sticas del Proyecto\n- 4 proyectos principales\n- +1000 l√≠neas de c√≥digo\n- +10 scripts automatizados\n- +5 integraciones con servicios externos\nüîç Pr√≥ximas Mejoras\n- Implementaci√≥n de tests unitarios\n- Mejora de la documentaci√≥n\n- Optimizaci√≥n de rendimiento\n- Implementaci√≥n de logging avanzado\n- Sistema de monitoreo\nüìö Recursos Adicionales\n- Documentaci√≥n de Selenium\n- Documentaci√≥n de FastAPI\n- Documentaci√≥n de GPT/Llama 2\n- Documentaci√≥n de Groq API\n- Best practices de scraping\n- Gu√≠as de seguridad en scraping']
DESCRIPCION PROYECTO ['Un conjunto de herramientas y m√≥dulos para procesamiento de im√°genes y visi√≥n artificial utilizando tecnolog√≠as como YOLO, OpenCV y Roboflow.', 'PotiBot es un asistente de voz interactivo que utiliza inteligencia artificial para mantener conversaciones en m√∫ltiples idiomas. Actualmente soporta espa√±ol, ingl√©s y franc√©s, con capacidades de reconocimiento de voz y s√≠ntesis de voz.', 'Este proyecto es un chat bot que utiliza inteligencia artificial para interactuar con los usuarios. El chat bot est√° conectado a una base de datos llamada **Supabase**, lo que le permite acceder y gestionar informaci√≥n de manera eficiente. La aplicaci√≥n web est√° desarrollada en Python utilizando el framework Reflex', 'Una soluci√≥n automatizada para mantener tu CV profesional siempre actualizado, extrayendo informaci√≥n directamente de tus repositorios de GitHub y generando un documento PDF listo para compartir.', 'Este repositorio contiene una colecci√≥n de proyectos de automatizaci√≥n y scraping desarrollados en Python. Cada proyecto est√° dise√±ado para optimizar procesos espec√≠ficos y extraer datos de manera eficiente.']
LENGUAJES PROYECTO [{'Python': 5729}, {'Python': 14400}, {'HTML': 74412, 'Python': 59831, 'Shell': 539, 'JavaScript': 154}, {'Python': 66371, 'TypeScript': 29627, 'JavaScript': 9588, 'CSS': 4731, 'Batchfile': 4402}, {'Python': 38265, 'Batchfile': 785}]